/*

Night Owl for highlight.js (c) Carl Baxter <carl@cbax.tech>

An adaptation of Sarah Drasner's Night Owl VS Code Theme
https://github.com/sdras/night-owl-vscode-theme

Copyright (c) 2018 Sarah Drasner

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

*/

.tiptap-editor .ProseMirror .hljs {
  background: rgba(var(--gray-800), 1);
  color: #d6deeb;
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  font-size: 0.875rem;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace, monospace;
}

/* General Purpose */

.tiptap-editor .ProseMirror .hljs-keyword {
  color: #c792ea;
}

.tiptap-editor .ProseMirror .hljs-built_in {
  color: #addb67;
}

.tiptap-editor .ProseMirror .hljs-type {
  color: #82aaff;
}

.tiptap-editor .ProseMirror .hljs-literal {
  color: #ff5874;
}

.tiptap-editor .ProseMirror .hljs-number {
  color: #F78C6C;
}

.tiptap-editor .ProseMirror .hljs-regexp {
  color: #5ca7e4;
}

.tiptap-editor .ProseMirror .hljs-string {
  color: #ecc48d;
}

.tiptap-editor .ProseMirror .hljs-subst {
  color: #d3423e;
}

.tiptap-editor .ProseMirror .hljs-symbol {
  color: #82aaff;
}

.tiptap-editor .ProseMirror .hljs-class {
  color: #ffcb8b;
}

.tiptap-editor .ProseMirror .hljs-function {
  color: #82AAFF;
}

.tiptap-editor .ProseMirror .hljs-title {
  color: #DCDCAA;
}

.tiptap-editor .ProseMirror .hljs-params {
  color: #7fdbca;
}

/* Meta */

.tiptap-editor .ProseMirror .hljs-comment {
  color: #637777;
}

.tiptap-editor .ProseMirror .hljs-doctag {
  color: #7fdbca;
}

.tiptap-editor .ProseMirror .hljs-meta {
  color: #82aaff;
}

.tiptap-editor .ProseMirror .hljs-meta .hljs-keyword {
  color: #82aaff;
}

.tiptap-editor .ProseMirror .hljs-meta .hljs-string {
  color: #ecc48d;
}

/* Tags, attributes, config */

.tiptap-editor .ProseMirror .hljs-section {
  color: #82b1ff;
}

.tiptap-editor .ProseMirror .hljs-tag,
    .tiptap-editor .ProseMirror .hljs-name {
  color: #7fdbca;
}

.tiptap-editor .ProseMirror .hljs-attr {
  color: #7fdbca;
}

.tiptap-editor .ProseMirror .hljs-attribute {
  color: #80cbc4;
}

.tiptap-editor .ProseMirror .hljs-variable {
  color: #addb67;
}

/* Markup */

.tiptap-editor .ProseMirror .hljs-bullet {
  color: #d9f5dd;
}

.tiptap-editor .ProseMirror .hljs-code {
  color: #80CBC4;
}

.tiptap-editor .ProseMirror .hljs-emphasis {
  color: #c792ea;
  font-style: italic;
}

.tiptap-editor .ProseMirror .hljs-strong {
  color: #addb67;
  font-weight: bold;
}

.tiptap-editor .ProseMirror .hljs-formula {
  color: #c792ea;
}

.tiptap-editor .ProseMirror .hljs-link {
  color: #ff869a;
}

.tiptap-editor .ProseMirror .hljs-quote {
  color: #697098;
}

/* CSS */

.tiptap-editor .ProseMirror .hljs-selector-tag {
  color: #ff6363;
}

.tiptap-editor .ProseMirror .hljs-selector-id {
  color: #fad430;
}

.tiptap-editor .ProseMirror .hljs-selector-class {
  color: #addb67;
}

.tiptap-editor .ProseMirror .hljs-selector-attr,
    .tiptap-editor .ProseMirror .hljs-selector-pseudo {
  color: #c792ea;
}

/* Templates */

.tiptap-editor .ProseMirror .hljs-template-tag {
  color: #c792ea;
}

.tiptap-editor .ProseMirror .hljs-template-variable {
  color: #addb67;
}

/* diff */

.tiptap-editor .ProseMirror .hljs-addition {
  color: #addb67ff;
  font-style: italic;
}

.tiptap-editor .ProseMirror .hljs-deletion {
  color: #EF535090;
  font-style: italic;
}

[wire\:key*="filament_tiptap_source"] .fi-fo-component-ctn {
  height: 100%;
}

[wire\:key*="filament_tiptap_source"] .fi-fo-component-ctn > div {
  height: 100%;
}

[wire\:key*="filament_tiptap_source"] .fi-fo-component-ctn > div .fi-fo-field-wrp {
  height: 100%;
}

[wire\:key*="filament_tiptap_source"] .fi-fo-component-ctn > div .fi-fo-field-wrp > div {
  height: 100%;
  grid-template-rows: auto 1fr;
}

[wire\:key*="filament_tiptap_source"] .fi-fo-component-ctn > div .fi-fo-field-wrp > div textarea {
  height: 100% !important;
}

.tiptap-wrapper.tiptap-fullscreen {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 40;
  display: flex;
  flex-direction: column;
  height: 100%;
}

.tiptap-wrapper.tiptap-fullscreen .tiptap-toolbar {
  border-radius: 0;
}

.tiptap-wrapper.tiptap-fullscreen .tiptap-prosemirror-wrapper {
  max-height: 100%;
  padding-block-end: 3rem;
}

.tiptap-editor .tiptap-content {
  display: flex;
  flex-direction: column;
}

.tiptap-prosemirror-wrapper.prosemirror-w-sm {
  padding: 0 max(1rem, calc((100% - 24rem) / 2));
}

.tiptap-prosemirror-wrapper.prosemirror-w-md {
  padding: 0 max(1rem, calc((100% - 28rem) / 2));
}

.tiptap-prosemirror-wrapper.prosemirror-w-lg {
  padding: 0 max(1rem, calc((100% - 32rem) / 2));
}

.tiptap-prosemirror-wrapper.prosemirror-w-xl {
  padding: 0 max(1rem, calc((100% - 36rem) / 2));
}

.tiptap-prosemirror-wrapper.prosemirror-w-2xl {
  padding: 0 max(1rem, calc((100% - 42rem) / 2));
}

.tiptap-prosemirror-wrapper.prosemirror-w-3xl {
  padding: 0 max(1rem, calc((100% - 48rem) / 2));
}

.tiptap-prosemirror-wrapper.prosemirror-w-4xl {
  padding: 0 max(1rem, calc((100% - 56rem) / 2));
}

.tiptap-prosemirror-wrapper.prosemirror-w-5xl {
  padding: 0 max(1rem, calc((100% - 64rem) / 2));
}

.tiptap-prosemirror-wrapper.prosemirror-w-6xl {
  padding: 0 max(1rem, calc((100% - 72rem) / 2));
}

.tiptap-prosemirror-wrapper.prosemirror-w-7xl {
  padding: 0 max(1rem, calc((100% - 80rem) / 2));
}

.tiptap-prosemirror-wrapper.prosemirror-w-none {
  padding: 0 1rem;
}

.tiptap-editor .ProseMirror {
  border-bottom-left-radius: 0.375rem;
  border-bottom-right-radius: 0.375rem;
  flex: 1 1 0;
  padding-block: 1rem;
  margin-inline: auto;
  position: relative;
  width: 100%;
  color: #000;
}

.tiptap-editor .ProseMirror.ProseMirror-focused .ProseMirror-selectednode {
  outline-style: dashed;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: rgba(var(--gray-700), 1);
}

:is(.dark .tiptap-editor .ProseMirror.ProseMirror-focused .ProseMirror-selectednode) {
  outline-color: rgba(var(--gray-300), 1);
}

.tiptap-editor .ProseMirror .tiptap-block-wrapper {
  overflow: hidden;
  border-radius: 0.375rem;
  --tw-bg-opacity: 1;
  background-color: rgba(var(--gray-100), var(--tw-bg-opacity));
}

:is(.dark .tiptap-editor .ProseMirror .tiptap-block-wrapper) {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--gray-800), var(--tw-bg-opacity));
}

.tiptap-editor .ProseMirror .tiptap-block-wrapper .tiptap-block .tiptap-block-heading {
  display: flex;
  align-items: center;
  justify-content: space-between;
  --tw-bg-opacity: 1;
  background-color: rgba(var(--gray-200), var(--tw-bg-opacity));
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  line-height: 1;
  --tw-text-opacity: 1;
  color: rgba(var(--gray-900), var(--tw-text-opacity));
}

:is(.dark .tiptap-editor .ProseMirror .tiptap-block-wrapper .tiptap-block .tiptap-block-heading) {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--gray-950), var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.tiptap-editor .ProseMirror .tiptap-block-wrapper .tiptap-block .tiptap-block-heading .tiptap-block-title {
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 700;
  text-transform: uppercase;
  opacity: 0.8;
}

.tiptap-editor .ProseMirror .tiptap-block-wrapper .tiptap-block .tiptap-block-actions {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.tiptap-editor .ProseMirror .tiptap-block-wrapper .tiptap-block .tiptap-block-actions button {
  opacity: 0.75;
}

.tiptap-editor .ProseMirror .tiptap-block-wrapper .tiptap-block .tiptap-block-actions button:hover {
  --tw-text-opacity: 1;
  color: rgba(var(--primary-500), var(--tw-text-opacity));
  opacity: 1;
}

.tiptap-editor .ProseMirror .tiptap-block-wrapper .tiptap-block .tiptap-block-actions button:focus {
  --tw-text-opacity: 1;
  color: rgba(var(--primary-500), var(--tw-text-opacity));
  opacity: 1;
}

.tiptap-editor .ProseMirror .tiptap-block-wrapper .tiptap-block .preview {
  padding: 1rem;
}

.tiptap-editor .ProseMirror .filament-tiptap-hurdle {
  width: 100%;
  max-width: 100vw;
  padding-block: 1rem;
  background-color: rgba(var(--gray-800), 1);
  position: relative;
}

.tiptap-editor .ProseMirror .filament-tiptap-hurdle::before,
        .tiptap-editor .ProseMirror .filament-tiptap-hurdle::after {
  content: '';
  position: absolute;
  display: block;
  width: 100%;
  top: 0;
  bottom: 0;
  background-color: inherit;
}

.tiptap-editor .ProseMirror .filament-tiptap-hurdle::before {
  left: -100%;
}

.tiptap-editor .ProseMirror .filament-tiptap-hurdle::after {
  right: -100%;
}

.tiptap-editor .ProseMirror .filament-tiptap-hurdle[data-color="gray_light"] {
  color: rgba(var(--gray-900), 1);
  background-color: rgba(var(--gray-300), 1);
}

.tiptap-editor .ProseMirror .filament-tiptap-hurdle[data-color="gray"] {
  color: white;
  background-color: rgba(var(--gray-500), 1);
}

.tiptap-editor .ProseMirror .filament-tiptap-hurdle[data-color="gray_dark"] {
  color: white;
  background-color: rgba(var(--gray-800), 1);
}

.tiptap-editor .ProseMirror .filament-tiptap-hurdle[data-color="primary"] {
  color: rgba(var(--gray-900), 1);
  background-color: rgba(var(--primary-500), 1);
}

.tiptap-editor .ProseMirror .filament-tiptap-hurdle[data-color="secondary"] {
  color: rgba(var(--gray-900), 1);
  background-color: rgba(var(--warning-500), 1);
}

.tiptap-editor .ProseMirror .filament-tiptap-hurdle[data-color="tertiary"] {
  color: white;
  background-color: rgba(var(--success-500), 1);
}

.tiptap-editor .ProseMirror .filament-tiptap-hurdle[data-color="accent"] {
  color: white;
  background-color: rgba(var(--danger-500), 1);
}

.tiptap-editor .ProseMirror.ProseMirror-focused {
  outline: none;
}

.tiptap-editor .ProseMirror > * + * {
  margin-block-start: 1rem;
}

.tiptap-editor .ProseMirror > * + h1,
    .tiptap-editor .ProseMirror > * + h2,
    .tiptap-editor .ProseMirror > * + h3,
    .tiptap-editor .ProseMirror > * + h4,
    .tiptap-editor .ProseMirror > * + h5,
    .tiptap-editor .ProseMirror > * + h6 {
  margin-block-start: 2rem;
}

.tiptap-editor .ProseMirror img {
  display: inline-block;
}

.tiptap-editor .ProseMirror h1,
    .tiptap-editor .ProseMirror h2,
    .tiptap-editor .ProseMirror h3,
    .tiptap-editor .ProseMirror h4,
    .tiptap-editor .ProseMirror h5,
    .tiptap-editor .ProseMirror h6 {
  font-weight: bold;
}

.tiptap-editor .ProseMirror h1 {
  font-size: 1.75rem;
  line-height: 1.1;
}

.tiptap-editor .ProseMirror h2 {
  font-size: 1.5rem;
  line-height: 1.1;
}

.tiptap-editor .ProseMirror h3 {
  font-size: 1.25rem;
  line-height: 1.25;
}

.tiptap-editor .ProseMirror h4 {
  font-size: 1.125rem;
}

.tiptap-editor .ProseMirror .lead {
  font-size: 1.375rem;
  line-height: 1.3;
}

.tiptap-editor .ProseMirror small {
  font-size: 0.75rem;
}

.tiptap-editor .ProseMirror ul > :not([hidden]) ~ :not([hidden]),
    .tiptap-editor .ProseMirror ol > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.tiptap-editor .ProseMirror ul,
    .tiptap-editor .ProseMirror ol {
  padding-inline-start: 1rem;
  margin-inline-start: 1rem;
}

.tiptap-editor .ProseMirror ul {
  list-style: disc;
}

.tiptap-editor .ProseMirror ol {
  list-style: decimal;
}

.tiptap-editor .ProseMirror ul.checked-list {
  list-style-type: none;
  margin-inline-start: 0;
}

.tiptap-editor .ProseMirror ul.checked-list li {
  display: flex;
  align-items: baseline;
  gap: 0.375em;
}

.tiptap-editor .ProseMirror ul.checked-list li::before {
  content: '✓';
  width: 1.25rem;
  height: 1.25rem;
  flex-shrink: 0;
}

.tiptap-editor .ProseMirror blockquote {
  border-left: 0.25rem solid rgba(var(--gray-400), 1);
  padding-inline-start: 0.5rem;
  margin-inline-start: 1rem;
  font-size: 1.25rem;
}

.tiptap-editor .ProseMirror hr {
  border-color: rgba(var(--gray-400), 1);
}

.tiptap-editor .ProseMirror a {
  color: #2563eb;
  text-decoration: underline;
}

.tiptap-editor .ProseMirror a[id] {
  color: #000;
  text-decoration: none;
}

.tiptap-editor .ProseMirror a[id]::before {
  content: '# ';
  color: rgba(var(--gray-500), 1);
  opacity: 50;
}

.tiptap-editor .ProseMirror a[data-as-button="true"] {
  background-color: rgba(var(--gray-900), 1);
  color: white !important;
  text-decoration: none;
  display: inline-block;
  border-radius: 0.375rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.tiptap-editor .ProseMirror a[data-as-button="true"][data-as-button-theme="primary"] {
  background-color: rgba(var(--primary-600), 1);
}

.tiptap-editor .ProseMirror a[data-as-button="true"][data-as-button-theme="secondary"] {
  background-color: rgba(var(--warning-600), 1);
}

.tiptap-editor .ProseMirror a[data-as-button="true"][data-as-button-theme="tertiary"] {
  background-color: rgba(var(--success-600), 1);
}

.tiptap-editor .ProseMirror a[data-as-button="true"][data-as-button-theme="accent"] {
  background-color: rgba(var(--danger-600), 1);
}

.tiptap-editor .ProseMirror sup {
  font-size: 65%;
}

.tiptap-editor .ProseMirror img {
  border: dashed 2px transparent;
}

.tiptap-editor .ProseMirror img.ProseMirror-selectednode {
  border-radius: 0.25rem;
  outline-offset: 2px;
  outline: rgba(var(--gray-900), 1) dashed 2px;
}

.tiptap-editor .ProseMirror table {
  border-collapse: collapse;
  margin: 0;
  overflow: hidden;
  table-layout: fixed;
  width: 100%;
  position: relative;
}

.tiptap-editor .ProseMirror table td,
    .tiptap-editor .ProseMirror table th {
  border: 1px solid rgba(var(--gray-400), 1);
  min-width: 1em;
  padding: 3px 5px;
  vertical-align: top;
  background-clip: padding-box
}

.tiptap-editor .ProseMirror table td > *,
    .tiptap-editor .ProseMirror table th > * {
  margin-bottom: 0;
}

.tiptap-editor .ProseMirror table th {
  background-color: rgba(var(--gray-200), 1);
  color: rgba(var(--gray-700), 1);
  font-weight: 700;
  text-align: left;
}

.tiptap-editor .ProseMirror table .selectedCell {
  position: relative;
}

.tiptap-editor .ProseMirror table .selectedCell:after {
  background: rgba(200, 200, 255, 0.4);
  content: "";
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  pointer-events: none;
  position: absolute;
  z-index: 2;
}

.tiptap-editor .ProseMirror table .column-resize-handle {
  background-color: #adf;
  bottom: -2px;
  position: absolute;
  right: -2px;
  pointer-events: none;
  top: 0;
  width: 4px;
}

.tiptap-editor .ProseMirror table p {
  margin: 0;
}

.tiptap-editor .ProseMirror .tableWrapper {
  padding: 1rem 0;
  overflow-x: auto;
}

.tiptap-editor .ProseMirror .resize-cursor {
  cursor: col-resize;
}

.tiptap-editor .ProseMirror pre {
  padding: .75rem 1rem;
  border-radius: .25rem;
  font-size: .875rem;
}

.tiptap-editor .ProseMirror code {
  background-color: rgba(var(--gray-300), 1);
  border-radius: 0.25rem;
  padding-inline: 0.25rem;
}

.tiptap-editor .ProseMirror pre.hljs code {
  background-color: transparent;
}

.tiptap-editor .ProseMirror .filament-tiptap-grid,
    .tiptap-editor .ProseMirror .filament-tiptap-grid-builder {
  display: grid;
  gap: 1rem;
  box-sizing: border-box;
}

.tiptap-editor .ProseMirror .filament-tiptap-grid .filament-tiptap-grid__column,
        .tiptap-editor .ProseMirror .filament-tiptap-grid .filament-tiptap-grid-builder__column,
        .tiptap-editor .ProseMirror .filament-tiptap-grid-builder .filament-tiptap-grid__column,
        .tiptap-editor .ProseMirror .filament-tiptap-grid-builder .filament-tiptap-grid-builder__column {
  box-sizing: border-box;
  border-style: dashed;
  border-width: 1px;
  border-color: rgba(var(--gray-400), 1);
  padding: 0.5rem;
  border-radius: 0.25rem;
}

.tiptap-editor .ProseMirror .filament-tiptap-grid .filament-tiptap-grid__column > * + *, .tiptap-editor .ProseMirror .filament-tiptap-grid .filament-tiptap-grid-builder__column > * + *, .tiptap-editor .ProseMirror .filament-tiptap-grid-builder .filament-tiptap-grid__column > * + *, .tiptap-editor .ProseMirror .filament-tiptap-grid-builder .filament-tiptap-grid-builder__column > * + * {
  margin-block-start: 1rem;
}

.tiptap-editor .ProseMirror .filament-tiptap-grid.ProseMirror-selectednode, .tiptap-editor .ProseMirror .filament-tiptap-grid-builder.ProseMirror-selectednode {
  border-radius: 0.25rem;
  outline-offset: 2px;
  outline: rgba(var(--gray-900), 1) dashed 2px;
}

.tiptap-editor .ProseMirror .filament-tiptap-grid[type^="asymetric"] {
  grid-template-columns: 1fr;
  grid-template-rows: auto;
}

@media (max-width: 640px) {
  .tiptap-editor .ProseMirror .filament-tiptap-grid-builder[data-stack-at="sm"] {
    grid-template-columns: 1fr !important;
  }

  .tiptap-editor .ProseMirror .filament-tiptap-grid-builder[data-stack-at="sm"] .filament-tiptap-grid-builder__column {
    grid-column: span 1 !important;
  }
}

@media (max-width: 768px) {
  .tiptap-editor .ProseMirror .filament-tiptap-grid-builder[data-stack-at="md"] {
    grid-template-columns: 1fr !important;
  }

  .tiptap-editor .ProseMirror .filament-tiptap-grid-builder[data-stack-at="md"] .filament-tiptap-grid-builder__column {
    grid-column: span 1 !important;
  }
}

@media (max-width: 1024px) {
  .tiptap-editor .ProseMirror .filament-tiptap-grid-builder[data-stack-at="lg"] {
    grid-template-columns: 1fr !important;
  }

  .tiptap-editor .ProseMirror .filament-tiptap-grid-builder[data-stack-at="lg"] .filament-tiptap-grid-builder__column {
    grid-column: span 1 !important;
  }
}

@media (min-width: 768px) {
  .tiptap-editor .ProseMirror .filament-tiptap-grid[type="asymetric-right-thirds"] {
    grid-template-columns: 1fr 2fr
  }

  .tiptap-editor .ProseMirror .filament-tiptap-grid[type="asymetric-left-thirds"] {
    grid-template-columns: 2fr 1fr
  }

  .tiptap-editor .ProseMirror .filament-tiptap-grid[type="asymetric-right-fourths"] {
    grid-template-columns: 1fr 3fr
  }

  .tiptap-editor .ProseMirror .filament-tiptap-grid[type="asymetric-left-fourths"] {
    grid-template-columns: 3fr 1fr
  }
}

.tiptap-editor .ProseMirror .filament-tiptap-grid[type="responsive"] {
  grid-template-columns: 1fr;
  grid-template-rows: auto;
}

@media (min-width: 768px) {
  .tiptap-editor .ProseMirror .filament-tiptap-grid[type="responsive"][cols="2"] {
    grid-template-columns: repeat(2, 1fr)
  }

  .tiptap-editor .ProseMirror .filament-tiptap-grid[type="responsive"][cols="3"] {
    grid-template-columns: repeat(3, 1fr)
  }

  .tiptap-editor .ProseMirror .filament-tiptap-grid[type="responsive"][cols="4"] {
    grid-template-columns: repeat(2, 1fr)
  }
}

@media (min-width: 1024px) {
  .tiptap-editor .ProseMirror .filament-tiptap-grid[type="responsive"][cols="4"] {
    grid-template-columns: repeat(4, 1fr)
  }
}

@media (min-width: 768px) {
  .tiptap-editor .ProseMirror .filament-tiptap-grid[type="responsive"][cols="5"] {
    grid-template-columns: repeat(5, 1fr)
  }
}

.tiptap-editor .ProseMirror .filament-tiptap-grid[type="fixed"][cols="2"] {
  grid-template-columns: repeat(2, 1fr);
}

.tiptap-editor .ProseMirror .filament-tiptap-grid[type="fixed"][cols="3"] {
  grid-template-columns: repeat(3, 1fr);
}

.tiptap-editor .ProseMirror .filament-tiptap-grid[type="fixed"][cols="4"] {
  grid-template-columns: repeat(4, 1fr);
}

.tiptap-editor .ProseMirror .filament-tiptap-grid[type="fixed"][cols="5"] {
  grid-template-columns: repeat(5, 1fr);
}

.tiptap-editor .ProseMirror [data-youtube-video],
    .tiptap-editor .ProseMirror [data-vimeo-video],
    .tiptap-editor .ProseMirror [data-native-video] {
  border: dashed 1px transparent;
}

.tiptap-editor .ProseMirror [data-youtube-video].ProseMirror-selectednode, .tiptap-editor .ProseMirror [data-vimeo-video].ProseMirror-selectednode, .tiptap-editor .ProseMirror [data-native-video].ProseMirror-selectednode {
  border-radius: 0.25rem;
  outline-offset: 2px;
  outline: rgba(var(--gray-900), 1) dashed 2px;
}

.tiptap-editor .ProseMirror [data-youtube-video] iframe,
        .tiptap-editor .ProseMirror [data-youtube-video] video,
        .tiptap-editor .ProseMirror [data-vimeo-video] iframe,
        .tiptap-editor .ProseMirror [data-vimeo-video] video,
        .tiptap-editor .ProseMirror [data-native-video] iframe,
        .tiptap-editor .ProseMirror [data-native-video] video {
  pointer-events: none;
}

.tiptap-editor .ProseMirror div[data-type="details"] {
  box-sizing: border-box;
  border-style: dashed;
  border-width: 1px;
  border-color: rgba(var(--gray-400), 1);
  border-radius: 0.25rem;
  position: relative;
}

.tiptap-editor .ProseMirror div[data-type="details"] button {
  position: absolute;
  z-index: 1;
  top: 0.125rem;
  right: 0.25rem;
  color: rgba(var(--gray-400), 1);
}

.tiptap-editor .ProseMirror div[data-type="details"] summary {
  padding: 0.375rem 0.5rem;
  font-weight: 700;
  border-bottom-style: solid;
  border-bottom-width: 1px;
  border-bottom-color: rgba(var(--gray-200), 1);
}

.tiptap-editor .ProseMirror div[data-type="details"] summary::marker {
  content: "";
  display: none;
}

.tiptap-editor .ProseMirror div[data-type="details"] div[data-type="details-content"] {
  padding: 0.5rem;
  height: auto;
}

.tiptap-editor .ProseMirror div[data-type="details"] div[data-type="details-content"] > * + * {
  margin-block-start: 1rem;
}

.dark .tiptap-editor .ProseMirror {
  color: rgba(var(--gray-200), 1);
}

.dark .tiptap-editor .ProseMirror blockquote {
  border-left-color: rgba(var(--gray-500), 1);
}

.dark .tiptap-editor .ProseMirror hr {
  border-color: rgba(var(--gray-500), 1);
}

.dark .tiptap-editor .ProseMirror a {
  color: #60a5fa;
}

.dark .tiptap-editor .ProseMirror a[id] {
  color: rgba(var(--gray-200), 1);
}

.dark .tiptap-editor .ProseMirror code {
  background-color: rgba(var(--gray-800), 1);
}

.dark .tiptap-editor .ProseMirror table td,
        .dark .tiptap-editor .ProseMirror table th {
  border-color: rgba(var(--gray-600), 1);
}

.dark .tiptap-editor .ProseMirror table th {
  background-color: rgba(var(--gray-800), 1);
  color: rgba(var(--gray-100), 1);
}

.dark .tiptap-editor .ProseMirror .filament-tiptap-grid .filament-tiptap-grid__column {
  border-color: rgba(var(--gray-500), 1);
}

.dark .tiptap-editor .ProseMirror .filament-tiptap-grid.ProseMirror-selectednode {
  outline-color: rgba(var(--gray-400), 1);
}

.dark .tiptap-editor .ProseMirror img.ProseMirror-selectednode {
  outline-color: rgba(var(--gray-400), 1);
}

.dark .tiptap-editor .ProseMirror [data-youtube-video].ProseMirror-selectednode, .dark .tiptap-editor .ProseMirror [data-vimeo-video].ProseMirror-selectednode, .dark .tiptap-editor .ProseMirror [data-native-video].ProseMirror-selectednode {
  outline-color: rgba(var(--gray-400), 1);
}

.dark .tiptap-editor .ProseMirror div[data-type="details"] {
  box-sizing: border-box;
  border-color: rgba(var(--gray-500), 1);
  border-radius: 0.25rem;
  position: relative;
}

.dark .tiptap-editor .ProseMirror div[data-type="details"] summary {
  border-bottom-color: rgba(var(--gray-500), 1);
}

.dark .tiptap-editor .ProseMirror-focused .ProseMirror-gapcursor:after {
  border-top: 1px solid white;
}

.filament-tiptap-editor-source-modal textarea {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace monospace;
}

.tiptap-editor p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
  --tw-text-opacity: 1;
  color: rgba(var(--gray-400), var(--tw-text-opacity));
}

:is(.dark .tiptap-editor p.is-editor-empty:first-child)::before {
  --tw-text-opacity: 1;
  color: rgba(var(--gray-500), var(--tw-text-opacity));
}

.tippy-content-p-0 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.25rem;
  margin-bottom: -0.25rem;
}

span[data-type="mergeTag"] {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
  border-radius: 0.25rem;
  --tw-bg-opacity: 1;
  background-color: rgba(var(--gray-100), var(--tw-bg-opacity));
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

:is(.dark span[data-type="mergeTag"]) {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--gray-800), var(--tw-bg-opacity));
}
